{"ast":null,"code":"var _jsxFileName = \"/home/zahari/Desktop/Portfolio-Zahari/src/components/toggle/toggle.tsx\";\nimport styles from './toggle.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Toggle = ({\n  handleChange,\n  isChecked\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles.toggleContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"check\",\n        className: styles.toggle,\n        checked: isChecked,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"check\",\n        children: \"Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = Toggle;\nvar _c;\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"names":["styles","jsxDEV","_jsxDEV","Toggle","handleChange","isChecked","style","position","children","className","toggleContainer","type","id","toggle","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["/home/zahari/Desktop/Portfolio-Zahari/src/components/toggle/toggle.tsx"],"sourcesContent":["import styles from './toggle.module.scss';\n\ninterface ToggleProps {\n  handleChange: () => void;\n  isChecked: boolean;\n}\n\nexport const Toggle = ({handleChange, isChecked}:ToggleProps):JSX.Element => {\n  return (\n    <div style={{position: 'relative'}}>\n\n    <label className={styles.toggleContainer}>\n      <input type=\"checkbox\" \n        id=\"check\"\n        className={styles.toggle}\n        checked={isChecked}\n        onChange={handleChange} />\n       <label htmlFor='check'>Dark Mode</label>\n    </label>\n        </div>\n  )\n}"],"mappings":";AAAA,OAAOA,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1C,OAAO,MAAMC,MAAM,GAAGA,CAAC;EAACC,YAAY;EAAEC;AAAqB,CAAC,KAAiB;EAC3E,oBACEH,OAAA;IAAKI,KAAK,EAAE;MAACC,QAAQ,EAAE;IAAU,CAAE;IAAAC,QAAA,eAEnCN,OAAA;MAAOO,SAAS,EAAET,MAAM,CAACU,eAAgB;MAAAF,QAAA,gBACvCN,OAAA;QAAOS,IAAI,EAAC,UAAU;QACpBC,EAAE,EAAC,OAAO;QACVH,SAAS,EAAET,MAAM,CAACa,MAAO;QACzBC,OAAO,EAAET,SAAU;QACnBU,QAAQ,EAAEX;MAAa;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3BjB,OAAA;QAAOkB,OAAO,EAAC,OAAO;QAAAZ,QAAA,EAAC;MAAS;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAAAE,EAAA,GAdYlB,MAAM;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}